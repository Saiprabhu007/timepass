{"version":3,"file":"component-Atoms-checkbox-index-stories.dbb7b30d010443b958c3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAtBA;AAwBA;AAAA;AAAA","sources":["webpack://zemoso-int-bootcamp-jan-b2-seeder/./src/component/Atoms/checkbox/index.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import theme from \"../../../Themes\";\r\n// import { ThemeProvider } from \"@emotion/react\";\r\n\r\n//  export type CheckboxProps = {\r\n//   label: string;\r\n//   checked: boolean;\r\n//   onChange: (checked: boolean) => void;\r\n//   disabled?:boolean;\r\n//   size?: string;\r\n// };\r\n\r\n// const Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange,disabled }) => {\r\n//   const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n\r\n//   const handleOnChange = () => {\r\n//     setIsChecked(!isChecked);\r\n//     onChange(!isChecked);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <ThemeProvider theme={theme}>\r\n//       <label>\r\n//         <input\r\n//           type=\"checkbox\"\r\n//           checked={isChecked}\r\n//           onChange={handleOnChange}\r\n//           disabled={disabled}\r\n//         />\r\n//         {label}\r\n//       </label>\r\n//       </ThemeProvider>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Checkbox;\r\n\r\n\r\n// import React from \"react\";\r\n// import { Checkbox as MuiCheckbox, FormControlLabel } from \"@mui/material\";\r\n// import { ThemeProvider } from \"@emotion/react\";\r\n// import theme from \"../../../Themes\";\r\n\r\n\r\n// export type CheckboxProps = {\r\n//   label: string;\r\n//   checked: boolean;\r\n//   onChange: (checked: boolean) => void;\r\n//   disabled?: boolean;\r\n// };\r\n\r\n// const Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange, disabled }) => {\r\n//   const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n//     onChange(event.target.checked);\r\n//   };\r\n\r\n//   return (\r\n//     <ThemeProvider theme={theme}>\r\n//       <FormControlLabel\r\n//         control={\r\n//           <MuiCheckbox\r\n//             checked={checked}\r\n//             onChange={handleOnChange}\r\n//             disabled={disabled}\r\n//             color=\"primary\"\r\n//           />\r\n//         }\r\n//         label={label}\r\n//       />\r\n//     </ThemeProvider>\r\n//   );\r\n// };\r\n\r\n// export default Checkbox;\r\n// export {}\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Checkbox } from \"@mui/material\";\r\n\r\n// interface CheckboxProps {\r\n//   label: string;\r\n//   checked?: boolean;\r\n//   onChange?: (checked: boolean) => void;\r\n//   color?: \"primary\" | \"secondary\" | \"error\";\r\n// }\r\n\r\n// const MyCheckbox: React.FC<CheckboxProps> = ({ label, checked, onChange, color = \"primary\" }) => {\r\n//   const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n\r\n//   const handleOnChange = () => {\r\n//     setIsChecked(!isChecked);\r\n//     onChange(!isChecked);\r\n//   };\r\n\r\n//   return (\r\n//     <Checkbox\r\n//       checked={isChecked}\r\n//       onChange={handleOnChange}\r\n//       color={color}\r\n//       inputProps={{ 'aria-label': label }}\r\n//       label={label}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// export default MyCheckbox;\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\r\nexport interface CheckboxProps {\r\n  label: string;\r\n  checked: boolean;\r\n  onChange: (checked: boolean) => void;\r\n  color?: \"primary\" | \"secondary\" | \"error\";\r\n}\r\n\r\nconst MyCheckbox: React.FC<CheckboxProps> = ({ label, checked, onChange, color = \"primary\" }) => {\r\n  const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n\r\n  const handleOnChange = () => {\r\n    const newChecked = !isChecked;\r\n    setIsChecked(newChecked);\r\n    onChange(newChecked);\r\n  };\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={isChecked}\r\n          onChange={handleOnChange}\r\n          color={color}\r\n          inputProps={{ 'aria-label': label }}\r\n        />\r\n      }\r\n      label={label}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MyCheckbox;\r\n"],"names":[],"sourceRoot":""}