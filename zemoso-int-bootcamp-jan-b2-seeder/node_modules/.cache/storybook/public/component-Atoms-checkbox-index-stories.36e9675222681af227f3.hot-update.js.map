{"version":3,"file":"component-Atoms-checkbox-index-stories.36e9675222681af227f3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAmsources":["webpack://zemoso-int-bootcamp-jan-b2-seeder/./src/Themes/index.ts","webpack://zemoso-int-bootcamp-jan-b2-seeder/./src/component/Atoms/checkbox/index.tsx"],"sourcesContent":["\r\ntype ColorPalette = {\r\n    primary: string;\r\n    secondary: string;\r\n    background: string;\r\n    text: string;\r\n  };\r\n  \r\n  type Typography = {\r\n    fontFamily: string[];\r\n    fontSize: string;\r\n    fontWeight: string;\r\n    color: string;\r\n  };\r\n  \r\n  type Spacing = {\r\n    small: string;\r\n    medium: string;\r\n    large: string;\r\n  };\r\n  type Button = {\r\n      backgroundColor: string;\r\n      color: string;\r\n      borderRadius: string;\r\n      padding: string;\r\n      fontSize: string;\r\n      fontWeight: string;\r\n    };\r\n    type Icon = {\r\n      size: string;\r\n      color: string;\r\n    };\r\n    type CheckboxStyles = {\r\n      color: string;\r\n      size: number;\r\n      \r\n    }\r\n    \r\n    type ImageStyles = {\r\n      width: string;\r\n      height: string;\r\n      \r\n    }\r\n    \r\n    type TextFieldStyles = {\r\n      backgroundColor: string;\r\n      borderRadius: string;\r\n      padding: string;\r\n      fontSize: string;\r\n      \r\n    }\r\n    type Avatar = {\r\n      width: string;\r\n      height: string;\r\n      backgroundColor: string;\r\n      borderRadius: string;\r\n      fontSize: string;\r\n      fontWeight: string;\r\n      color: string;\r\n    };\r\n    \r\n    type Slider = {\r\n      thumbSize: string;\r\n      thumbColor: string;\r\n      railColor: string;\r\n      trackColor: string;\r\n    };\r\n  type Theme = {\r\n    colors: ColorPalette;\r\n    typography: {\r\n      h1: Typography;\r\n      h2: Typography;\r\n      h3: Typography;\r\n      h4: Typography;\r\n      h5: Typography;\r\n      h6: Typography;\r\n      body1: Typography;\r\n      body2: Typography;\r\n      subtitle1:Typography;\r\n      subtitle2:Typography;\r\n    };\r\n    spacing: Spacing;\r\n    buttons: {\r\n      primary: Button;\r\n      secondary: Button;\r\n      tertiary: Button;\r\n    };\r\n    icons: {\r\n      logo: Icon;\r\n      menu: Icon;\r\n      search: Icon;\r\n    };\r\n    checkbox: CheckboxStyles;\r\n    image: ImageStyles;\r\n    textfield: TextFieldStyles;\r\n    avatar: Avatar;\r\n    slider: Slider;\r\n  };\r\n  \r\n  const theme: Theme = {\r\n    colors: {\r\n      primary: \"#0072C6\",\r\n      secondary: \"#9BC2E6\",\r\n      background: \"#F7F7F7\",\r\n      text: \"#333333\",\r\n    },\r\n    typography: {\r\n      h1: {\r\n        fontFamily: [\"Roboto\",'Open Sans'],\r\n        fontSize: \"100px\",\r\n        fontWeight: \"bold\",\r\n        color:\"blue\",\r\n      },\r\n      h2: {\r\n        fontFamily: [\"Roboto\",'Open Sans'],\r\n        fontSize: \"70px\",\r\n        fontWeight: \"bold\",\r\n        color: \"red\",\r\n      },\r\n      h3: {\r\n        fontFamily: [\"Roboto\",'Open Sans'],\r\n        fontSize: \"40px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#333333\",\r\n      },\r\n      h4: {\r\n        fontFamily: [\"Roboto\",'Open Sans'],\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#333333\",\r\n      },\r\n      h5: {\r\n        fontFamily: [\"Roboto\",'Open Sans'],\r\n        fontSize: \"15px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#333333\",\r\n      },\r\n      h6: {\r\n        fontFamily: [\"Roboto\",'Open Sans'],\r\n        fontSize: \"15px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#333333\",\r\n      },\r\n      body1: {\r\n        fontFamily: [\"Roboto\",'Open Sans'],\r\n        fontSize: \"10px\",\r\n        fontWeight: \"normal\",\r\n        color: \"#666666\",\r\n      },\r\n      body2: {\r\n        fontFamily: [\"Roboto\",'Open Sans'],\r\n        fontSize: \"10px\",\r\n        fontWeight: \"normal\",\r\n        color: \"#666666\",\r\n      },\r\n      subtitle1: {\r\n          fontFamily: [\"Roboto\",'Open Sans'],\r\n          fontSize: \"10px\",\r\n          fontWeight: \"normal\",\r\n          color: \"#666666\",\r\n        },\r\n      subtitle2: {\r\n          fontFamily: [\"Roboto\",'Open Sans'],\r\n          fontSize: \"10px\",\r\n          fontWeight: \"normal\",\r\n          color: \"#666666\",\r\n        },\r\n    },\r\n    spacing: {\r\n      small: \"8px\",\r\n      medium: \"16px\",\r\n      large: \"24px\",\r\n    },\r\n    buttons: {\r\n      primary: {\r\n        backgroundColor: '#0072C6',\r\n        color: '#FFFFFF',\r\n        borderRadius: '4px',\r\n        padding: '8px 16px',\r\n        fontSize: '16px',\r\n        fontWeight: 'bold',\r\n      },\r\n      secondary: {\r\n        backgroundColor: '#FFFFFF',\r\n        color: '#0072C6',\r\n        borderRadius: '4px',\r\n        padding: '8px 16px',\r\n        fontSize: '16px',\r\n        fontWeight: 'bold',\r\n      },\r\n      tertiary: {\r\n        backgroundColor: 'transparent',\r\n        color: '#0072C6',\r\n        borderRadius: '4px',\r\n        padding: '8px 16px',\r\n        fontSize: '16px',\r\n        fontWeight: 'normal',\r\n      },\r\n    },\r\n    icons: {\r\n      logo: {\r\n        size: '48px',\r\n        color: '#0072C6',\r\n      },\r\n      menu: {\r\n        size: '24px',\r\n        color: '#333333',\r\n      },\r\n      search: {\r\n        size: '24px',\r\n        color: '#333333',\r\n      },\r\n    },\r\n    checkbox: {\r\n      color: \"#0072C6\",\r\n      size: 30,\r\n      \r\n    },\r\n    image: {\r\n      width: \"100%\",\r\n      height: \"auto\",\r\n      \r\n    },\r\n    textfield: {\r\n      backgroundColor: \"#F7F7F7\",\r\n      borderRadius: \"4px\",\r\n      padding: \"12px\",\r\n      fontSize: \"16px\",\r\n      \r\n    },\r\n    avatar: {\r\n      width: '48px',\r\n      height: '48px',\r\n      backgroundColor: '#9BC2E6',\r\n      borderRadius: '50%',\r\n      fontSize: '24px',\r\n      fontWeight: 'bold',\r\n      color: '#FFFFFF',\r\n    },\r\n    slider: {\r\n      thumbSize: '24px',\r\n      thumbColor: '#0072C6',\r\n      railColor: '#9BC2E6',\r\n      trackColor: '#0072C6',\r\n    },\r\n  \r\n  };\r\n  \r\n  export default theme;\r\n  \r\n  export {}","// import React, { useState } from \"react\";\r\n// import theme from \"../../../Themes\";\r\n// import { ThemeProvider } from \"@emotion/react\";\r\n\r\n//  export type CheckboxProps = {\r\n//   label: string;\r\n//   checked: boolean;\r\n//   onChange: (checked: boolean) => void;\r\n//   disabled?:boolean;\r\n//   size?: string;\r\n// };\r\n\r\n// const Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange,disabled }) => {\r\n//   const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n\r\n//   const handleOnChange = () => {\r\n//     setIsChecked(!isChecked);\r\n//     onChange(!isChecked);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <ThemeProvider theme={theme}>\r\n//       <label>\r\n//         <input\r\n//           type=\"checkbox\"\r\n//           checked={isChecked}\r\n//           onChange={handleOnChange}\r\n//           disabled={disabled}\r\n//         />\r\n//         {label}\r\n//       </label>\r\n//       </ThemeProvider>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Checkbox;\r\n\r\n\r\nimport React from \"react\";\r\nimport { Checkbox as MuiCheckbox, FormControlLabel } from \"@mui/material\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\nimport theme from \"../../../Themes\";\r\n\r\nexport type CheckboxProps = {\r\n  label: string;\r\n  checked: boolean;\r\n  onChange: (checked: boolean) => void;\r\n  disabled?: boolean;\r\n};\r\n\r\nconst Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange, disabled }) => {\r\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <FormControlLabel\r\n        control={\r\n          <MuiCheckbox\r\n            checked={checked}\r\n            onChange={handleOnChange}\r\n            disabled={disabled}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n"],"names":[],"sourceRoot":""}