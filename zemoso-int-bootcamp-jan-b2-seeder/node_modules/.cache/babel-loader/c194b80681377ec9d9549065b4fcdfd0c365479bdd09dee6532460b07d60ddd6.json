{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAI PRABHU\\\\OneDrive\\\\Desktop\\\\zemoso-int-bootcamp-jan-b2-seeder\\\\src\\\\component\\\\Atoms\\\\checkbox\\\\index.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import theme from \"../../../Themes\";\n// import { ThemeProvider } from \"@emotion/react\";\n\n//  export type CheckboxProps = {\n//   label: string;\n//   checked: boolean;\n//   onChange: (checked: boolean) => void;\n//   disabled?:boolean;\n//   size?: string;\n// };\n\n// const Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange,disabled }) => {\n//   const [isChecked, setIsChecked] = useState<boolean>(checked);\n\n//   const handleOnChange = () => {\n//     setIsChecked(!isChecked);\n//     onChange(!isChecked);\n//   };\n\n//   return (\n//     <div>\n//         <ThemeProvider theme={theme}>\n//       <label>\n//         <input\n//           type=\"checkbox\"\n//           checked={isChecked}\n//           onChange={handleOnChange}\n//           disabled={disabled}\n//         />\n//         {label}\n//       </label>\n//       </ThemeProvider>\n//     </div>\n//   );\n// };\n\n// export default Checkbox;\n\n// import React from \"react\";\n// import { Checkbox as MuiCheckbox, FormControlLabel } from \"@mui/material\";\n// import { ThemeProvider } from \"@emotion/react\";\n// import theme from \"../../../Themes\";\n\n// export type CheckboxProps = {\n//   label: string;\n//   checked: boolean;\n//   onChange: (checked: boolean) => void;\n//   disabled?: boolean;\n// };\n\n// const Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange, disabled }) => {\n//   const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     onChange(event.target.checked);\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <FormControlLabel\n//         control={\n//           <MuiCheckbox\n//             checked={checked}\n//             onChange={handleOnChange}\n//             disabled={disabled}\n//             color=\"primary\"\n//           />\n//         }\n//         label={label}\n//       />\n//     </ThemeProvider>\n//   );\n// };\n\n// export default Checkbox;\n// export {}\n\n// import React, { useState } from \"react\";\n// import { Checkbox } from \"@mui/material\";\n\n// interface CheckboxProps {\n//   label: string;\n//   checked?: boolean;\n//   onChange?: (checked: boolean) => void;\n//   color?: \"primary\" | \"secondary\" | \"error\";\n// }\n\n// const MyCheckbox: React.FC<CheckboxProps> = ({ label, checked, onChange, color = \"primary\" }) => {\n//   const [isChecked, setIsChecked] = useState<boolean>(checked);\n\n//   const handleOnChange = () => {\n//     setIsChecked(!isChecked);\n//     onChange(!isChecked);\n//   };\n\n//   return (\n//     <Checkbox\n//       checked={isChecked}\n//       onChange={handleOnChange}\n//       color={color}\n//       inputProps={{ 'aria-label': label }}\n//       label={label}\n//     />\n//   );\n// }\n\n// export default MyCheckbox;\n\nimport React, { useState } from \"react\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyCheckbox = _ref => {\n  _s();\n  let {\n    label,\n    checked,\n    onChange,\n    color = \"primary\"\n  } = _ref;\n  const [isChecked, setIsChecked] = useState(checked);\n  const handleOnChange = () => {\n    const newChecked = !isChecked;\n    setIsChecked(newChecked);\n    onChange(newChecked);\n  };\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: isChecked,\n      onChange: handleOnChange,\n      color: color,\n      inputProps: {\n        'aria-label': label\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this),\n    label: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(MyCheckbox, \"PhP7ZOkwJBhoZyPv2N65OySr648=\");\n_c = MyCheckbox;\nexport default MyCheckbox;\nvar _c;\n$RefreshReg$(_c, \"MyCheckbox\");","map":{"version":3,"names":["React","useState","Checkbox","FormControlLabel","jsxDEV","_jsxDEV","MyCheckbox","_ref","_s","label","checked","onChange","color","isChecked","setIsChecked","handleOnChange","newChecked","control","inputProps","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SAI PRABHU/OneDrive/Desktop/zemoso-int-bootcamp-jan-b2-seeder/src/component/Atoms/checkbox/index.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import theme from \"../../../Themes\";\r\n// import { ThemeProvider } from \"@emotion/react\";\r\n\r\n//  export type CheckboxProps = {\r\n//   label: string;\r\n//   checked: boolean;\r\n//   onChange: (checked: boolean) => void;\r\n//   disabled?:boolean;\r\n//   size?: string;\r\n// };\r\n\r\n// const Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange,disabled }) => {\r\n//   const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n\r\n//   const handleOnChange = () => {\r\n//     setIsChecked(!isChecked);\r\n//     onChange(!isChecked);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <ThemeProvider theme={theme}>\r\n//       <label>\r\n//         <input\r\n//           type=\"checkbox\"\r\n//           checked={isChecked}\r\n//           onChange={handleOnChange}\r\n//           disabled={disabled}\r\n//         />\r\n//         {label}\r\n//       </label>\r\n//       </ThemeProvider>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Checkbox;\r\n\r\n\r\n// import React from \"react\";\r\n// import { Checkbox as MuiCheckbox, FormControlLabel } from \"@mui/material\";\r\n// import { ThemeProvider } from \"@emotion/react\";\r\n// import theme from \"../../../Themes\";\r\n\r\n\r\n// export type CheckboxProps = {\r\n//   label: string;\r\n//   checked: boolean;\r\n//   onChange: (checked: boolean) => void;\r\n//   disabled?: boolean;\r\n// };\r\n\r\n// const Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange, disabled }) => {\r\n//   const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n//     onChange(event.target.checked);\r\n//   };\r\n\r\n//   return (\r\n//     <ThemeProvider theme={theme}>\r\n//       <FormControlLabel\r\n//         control={\r\n//           <MuiCheckbox\r\n//             checked={checked}\r\n//             onChange={handleOnChange}\r\n//             disabled={disabled}\r\n//             color=\"primary\"\r\n//           />\r\n//         }\r\n//         label={label}\r\n//       />\r\n//     </ThemeProvider>\r\n//   );\r\n// };\r\n\r\n// export default Checkbox;\r\n// export {}\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Checkbox } from \"@mui/material\";\r\n\r\n// interface CheckboxProps {\r\n//   label: string;\r\n//   checked?: boolean;\r\n//   onChange?: (checked: boolean) => void;\r\n//   color?: \"primary\" | \"secondary\" | \"error\";\r\n// }\r\n\r\n// const MyCheckbox: React.FC<CheckboxProps> = ({ label, checked, onChange, color = \"primary\" }) => {\r\n//   const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n\r\n//   const handleOnChange = () => {\r\n//     setIsChecked(!isChecked);\r\n//     onChange(!isChecked);\r\n//   };\r\n\r\n//   return (\r\n//     <Checkbox\r\n//       checked={isChecked}\r\n//       onChange={handleOnChange}\r\n//       color={color}\r\n//       inputProps={{ 'aria-label': label }}\r\n//       label={label}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// export default MyCheckbox;\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\r\nexport interface CheckboxProps {\r\n  label: string;\r\n  checked: boolean;\r\n  onChange: (checked: boolean) => void;\r\n  color?: \"primary\" | \"secondary\" | \"error\";\r\n}\r\n\r\nconst MyCheckbox: React.FC<CheckboxProps> = ({ label, checked, onChange, color = \"primary\" }) => {\r\n  const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n\r\n  const handleOnChange = () => {\r\n    const newChecked = !isChecked;\r\n    setIsChecked(newChecked);\r\n    onChange(newChecked);\r\n  };\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={isChecked}\r\n          onChange={handleOnChange}\r\n          color={color}\r\n          inputProps={{ 'aria-label': label }}\r\n        />\r\n      }\r\n      label={label}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MyCheckbox;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ3D,MAAMC,UAAmC,GAAGC,IAAA,IAAqD;EAAAC,EAAA;EAAA,IAApD;IAAEC,KAAK;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,KAAK,GAAG;EAAU,CAAC,GAAAL,IAAA;EAC1F,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAUS,OAAO,CAAC;EAE5D,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,UAAU,GAAG,CAACH,SAAS;IAC7BC,YAAY,CAACE,UAAU,CAAC;IACxBL,QAAQ,CAACK,UAAU,CAAC;EACtB,CAAC;EAED,oBACEX,OAAA,CAACF,gBAAgB;IACfc,OAAO,eACLZ,OAAA,CAACH,QAAQ;MACPQ,OAAO,EAAEG,SAAU;MACnBF,QAAQ,EAAEI,cAAe;MACzBH,KAAK,EAAEA,KAAM;MACbM,UAAU,EAAE;QAAE,YAAY,EAAET;MAAM;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEvC;IACDb,KAAK,EAAEA;EAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACb;AAEN,CAAC;AAAAd,EAAA,CAtBKF,UAAmC;AAAAiB,EAAA,GAAnCjB,UAAmC;AAwBzC,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}