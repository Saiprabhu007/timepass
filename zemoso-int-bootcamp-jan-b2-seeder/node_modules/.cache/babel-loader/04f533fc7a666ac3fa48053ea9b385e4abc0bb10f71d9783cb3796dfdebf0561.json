{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAI PRABHU\\\\OneDrive\\\\Desktop\\\\zemoso-int-bootcamp-jan-b2-seeder\\\\src\\\\component\\\\Atoms\\\\checkbox\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyCheckbox = _ref => {\n  _s();\n  let {\n    label,\n    checked,\n    onChange,\n    color = \"primary\",\n    disabled = false\n  } = _ref;\n  const [isChecked, setIsChecked] = useState(checked);\n  const handleOnChange = () => {\n    const newChecked = !isChecked;\n    setIsChecked(newChecked);\n    onChange(newChecked);\n  };\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: isChecked,\n      onChange: handleOnChange,\n      color: color,\n      inputProps: {\n        'aria-label': label\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this),\n    label: label,\n    disabled: disabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MyCheckbox, \"PhP7ZOkwJBhoZyPv2N65OySr648=\");\n_c = MyCheckbox;\nexport default MyCheckbox;\nvar _c;\n$RefreshReg$(_c, \"MyCheckbox\");","map":{"version":3,"names":["React","useState","Checkbox","FormControlLabel","jsxDEV","_jsxDEV","MyCheckbox","_ref","_s","label","checked","onChange","color","disabled","isChecked","setIsChecked","handleOnChange","newChecked","control","inputProps","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SAI PRABHU/OneDrive/Desktop/zemoso-int-bootcamp-jan-b2-seeder/src/component/Atoms/checkbox/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\r\nexport interface CheckboxProps {\r\n  label: string;\r\n  checked: boolean;\r\n  onChange: (checked: boolean) => void;\r\n  color?: \"primary\" | \"secondary\" | \"error\";\r\n  disabled?:boolean;\r\n}\r\n\r\nconst MyCheckbox: React.FC<CheckboxProps> = ({ label, checked, onChange, color = \"primary\", disabled=false }) => {\r\n  const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n\r\n  const handleOnChange = () => {\r\n    const newChecked = !isChecked;\r\n    setIsChecked(newChecked);\r\n    onChange(newChecked);\r\n  };\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={isChecked}\r\n          onChange={handleOnChange}\r\n          color={color}\r\n          inputProps={{ 'aria-label': label }}\r\n          \r\n        />\r\n      }\r\n      label={label}\r\n      disabled={disabled}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MyCheckbox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS3D,MAAMC,UAAmC,GAAGC,IAAA,IAAqE;EAAAC,EAAA;EAAA,IAApE;IAAEC,KAAK;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,KAAK,GAAG,SAAS;IAAEC,QAAQ,GAAC;EAAM,CAAC,GAAAN,IAAA;EAC1G,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAUS,OAAO,CAAC;EAE5D,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,UAAU,GAAG,CAACH,SAAS;IAC7BC,YAAY,CAACE,UAAU,CAAC;IACxBN,QAAQ,CAACM,UAAU,CAAC;EACtB,CAAC;EAED,oBACEZ,OAAA,CAACF,gBAAgB;IACfe,OAAO,eACLb,OAAA,CAACH,QAAQ;MACPQ,OAAO,EAAEI,SAAU;MACnBH,QAAQ,EAAEK,cAAe;MACzBJ,KAAK,EAAEA,KAAM;MACbO,UAAU,EAAE;QAAE,YAAY,EAAEV;MAAM;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGvC;IACDd,KAAK,EAAEA,KAAM;IACbI,QAAQ,EAAEA;EAAS;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnB;AAEN,CAAC;AAAAf,EAAA,CAxBKF,UAAmC;AAAAkB,EAAA,GAAnClB,UAAmC;AA0BzC,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}