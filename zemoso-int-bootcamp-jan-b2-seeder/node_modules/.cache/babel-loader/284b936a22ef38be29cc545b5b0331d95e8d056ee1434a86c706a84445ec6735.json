{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAI PRABHU\\\\OneDrive\\\\Desktop\\\\zemoso-int-bootcamp-jan-b2-seeder\\\\src\\\\component\\\\Atoms\\\\checkbox\\\\index.tsx\";\n// import React, { useState } from \"react\";\n// import theme from \"../../../Themes\";\n// import { ThemeProvider } from \"@emotion/react\";\n\n//  export type CheckboxProps = {\n//   label: string;\n//   checked: boolean;\n//   onChange: (checked: boolean) => void;\n//   disabled?:boolean;\n//   size?: string;\n// };\n\n// const Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange,disabled }) => {\n//   const [isChecked, setIsChecked] = useState<boolean>(checked);\n\n//   const handleOnChange = () => {\n//     setIsChecked(!isChecked);\n//     onChange(!isChecked);\n//   };\n\n//   return (\n//     <div>\n//         <ThemeProvider theme={theme}>\n//       <label>\n//         <input\n//           type=\"checkbox\"\n//           checked={isChecked}\n//           onChange={handleOnChange}\n//           disabled={disabled}\n//         />\n//         {label}\n//       </label>\n//       </ThemeProvider>\n//     </div>\n//   );\n// };\n\n// export default Checkbox;\n\nimport React from \"react\";\nimport { Checkbox as MuiCheckbox, FormControlLabel } from \"@mui/material\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport theme from \"../../../Themes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkbox = _ref => {\n  let {\n    label,\n    checked,\n    onChange,\n    disabled\n  } = _ref;\n  const handleOnChange = event => {\n    onChange(event.target.checked);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(MuiCheckbox, {\n        checked: checked,\n        onChange: handleOnChange,\n        disabled: disabled,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this),\n      label: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = Checkbox;\nexport default Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","Checkbox","MuiCheckbox","FormControlLabel","ThemeProvider","theme","jsxDEV","_jsxDEV","_ref","label","checked","onChange","disabled","handleOnChange","event","target","children","control","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SAI PRABHU/OneDrive/Desktop/zemoso-int-bootcamp-jan-b2-seeder/src/component/Atoms/checkbox/index.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import theme from \"../../../Themes\";\r\n// import { ThemeProvider } from \"@emotion/react\";\r\n\r\n//  export type CheckboxProps = {\r\n//   label: string;\r\n//   checked: boolean;\r\n//   onChange: (checked: boolean) => void;\r\n//   disabled?:boolean;\r\n//   size?: string;\r\n// };\r\n\r\n// const Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange,disabled }) => {\r\n//   const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n\r\n//   const handleOnChange = () => {\r\n//     setIsChecked(!isChecked);\r\n//     onChange(!isChecked);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <ThemeProvider theme={theme}>\r\n//       <label>\r\n//         <input\r\n//           type=\"checkbox\"\r\n//           checked={isChecked}\r\n//           onChange={handleOnChange}\r\n//           disabled={disabled}\r\n//         />\r\n//         {label}\r\n//       </label>\r\n//       </ThemeProvider>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Checkbox;\r\n\r\n\r\nimport React from \"react\";\r\nimport { Checkbox as MuiCheckbox, FormControlLabel } from \"@mui/material\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\nimport theme from \"../../../Themes\";\r\n\r\nexport type CheckboxProps = {\r\n  label: string;\r\n  checked: boolean;\r\n  onChange: (checked: boolean) => void;\r\n  disabled?: boolean;\r\n};\r\n\r\nconst Checkbox: React.FC<CheckboxProps> = ({ label, checked, onChange, disabled }) => {\r\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <FormControlLabel\r\n        control={\r\n          <MuiCheckbox\r\n            checked={checked}\r\n            onChange={handleOnChange}\r\n            disabled={disabled}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,IAAIC,WAAW,EAAEC,gBAAgB,QAAQ,eAAe;AACzE,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASpC,MAAMN,QAAiC,GAAGO,IAAA,IAA4C;EAAA,IAA3C;IAAEC,KAAK;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EAC/E,MAAMK,cAAc,GAAIC,KAA0C,IAAK;IACrEH,QAAQ,CAACG,KAAK,CAACC,MAAM,CAACL,OAAO,CAAC;EAChC,CAAC;EAED,oBACEH,OAAA,CAACH,aAAa;IAACC,KAAK,EAAEA,KAAM;IAAAW,QAAA,eAC1BT,OAAA,CAACJ,gBAAgB;MACfc,OAAO,eACLV,OAAA,CAACL,WAAW;QACVQ,OAAO,EAAEA,OAAQ;QACjBC,QAAQ,EAAEE,cAAe;QACzBD,QAAQ,EAAEA,QAAS;QACnBM,KAAK,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAElB;MACDb,KAAK,EAAEA;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACb;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAEpB,CAAC;AAACC,EAAA,GApBItB,QAAiC;AAsBvC,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}