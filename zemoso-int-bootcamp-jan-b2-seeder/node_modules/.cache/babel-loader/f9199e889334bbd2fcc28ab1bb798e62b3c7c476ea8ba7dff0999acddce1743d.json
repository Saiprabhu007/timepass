{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAI PRABHU\\\\OneDrive\\\\Desktop\\\\zemoso-int-bootcamp-jan-b2-seeder\\\\src\\\\component\\\\Atoms\\\\checkbox\\\\index.stories.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Story, Meta } from \"@storybook/react\";\n// import Checkbox , {CheckboxProps} from \"./index\";\n\n// export default {\n//   title: \"Atoms/Checkbox\",\n//   component: Checkbox,\n//   argTypes: {\n//     label: { control: \"text\" },\n//     checked: { control: \"boolean\" },\n//     disabled: { control: \"boolean\" },\n\n//   },\n// } as Meta;\n// const Template: Story<CheckboxProps> = ({ checked, disabled, onChange, ...args }: CheckboxProps) => {\n//   const [isChecked, setIsChecked] = useState<boolean>(checked || false);\n//   const [isDisabled, setIsDisabled] = useState<boolean>(disabled || false);\n\n//   const handleOnChange = () => {\n//     const newValue = !isChecked;\n//     setIsChecked(newValue);\n//     onChange && onChange(newValue);\n//   };\n\n//   return (\n//     <Checkbox\n//       {...args}\n//       checked={isChecked}\n//       onChange={handleOnChange}\n//       disabled={isDisabled}\n//     />\n//   );\n// };\n\n// export const Default = Template.bind({});\n// Default.args = {\n//   label: \"Checkbox\",\n//   checked: false,\n//   disabled: false,\n\n// };\n\n// export const Checked = Template.bind({});\n// Checked.args = {\n//   label: \"Checked Checkbox\",\n//   checked: undefined,\n// };\n\n// export const Disabled = Template.bind({});\n// Disabled.args = {\n//   label: \"Disabled Checkbox\",\n//   disabled: true,\n// };\n\n// export const CheckedDisabled = Template.bind({});\n// CheckedDisabled.args = {\n//   label: \"Checked Disabled Checkbox\",\n//   checked: true,\n//   disabled: true,\n// };\n\nimport React, { useState, useEffect } from \"react\";\nimport Checkbox from \"./index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: \"Atoms/Checkbox\",\n  component: Checkbox,\n  argTypes: {\n    label: {\n      control: \"text\"\n    },\n    checked: {\n      control: \"boolean\"\n    },\n    disabled: {\n      control: \"boolean\"\n    }\n  }\n};\nconst Template = args => {\n  _s();\n  const [isChecked, setIsChecked] = useState(args.checked || false);\n  const [isDisabled, setIsDisabled] = useState(args.disabled || false);\n  useEffect(() => {\n    setIsChecked(args.checked || false);\n  }, [args.checked]);\n  useEffect(() => {\n    setIsDisabled(args.disabled || false);\n  }, [args.disabled]);\n  const handleOnChange = () => {\n    const newValue = !isChecked;\n    setIsChecked(newValue);\n    args.onChange && args.onChange(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Checkbox, {\n    ...args,\n    checked: isChecked,\n    onChange: handleOnChange,\n    disabled: isDisabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Template, \"n7ZjI1zq+enQUzDj4tw/C4FlZeY=\");\n_c = Template;\nexport const Default = Template.bind({});\nDefault.args = {\n  label: \"Checkbox\",\n  checked: false,\n  disabled: false\n};\nexport const Checked = Template.bind({});\nChecked.args = {\n  label: \"Checked Checkbox\",\n  checked: true\n};\nexport const Disabled = Template.bind({});\nDisabled.args = {\n  label: \"Disabled Checkbox\",\n  disabled: true\n};\nexport const CheckedDisabled = Template.bind({});\nCheckedDisabled.args = {\n  label: \"Checked Disabled Checkbox\",\n  checked: true,\n  disabled: true\n};\nvar _c;\n$RefreshReg$(_c, \"Template\");\nexport const __namedExportsOrder = [\"Default\", \"Checked\", \"Disabled\", \"CheckedDisabled\"];","map":{"version":3,"names":["React","useState","useEffect","Checkbox","jsxDEV","_jsxDEV","title","component","argTypes","label","control","checked","disabled","Template","args","_s","isChecked","setIsChecked","isDisabled","setIsDisabled","handleOnChange","newValue","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","Default","bind","Checked","Disabled","CheckedDisabled","$RefreshReg$","__namedExportsOrder"],"sources":["C:/Users/SAI PRABHU/OneDrive/Desktop/zemoso-int-bootcamp-jan-b2-seeder/src/component/Atoms/checkbox/index.stories.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Story, Meta } from \"@storybook/react\";\r\n// import Checkbox , {CheckboxProps} from \"./index\";\r\n\r\n\r\n// export default {\r\n//   title: \"Atoms/Checkbox\",\r\n//   component: Checkbox,\r\n//   argTypes: {\r\n//     label: { control: \"text\" },\r\n//     checked: { control: \"boolean\" },\r\n//     disabled: { control: \"boolean\" },\r\n   \r\n//   },\r\n// } as Meta;\r\n// const Template: Story<CheckboxProps> = ({ checked, disabled, onChange, ...args }: CheckboxProps) => {\r\n//   const [isChecked, setIsChecked] = useState<boolean>(checked || false);\r\n//   const [isDisabled, setIsDisabled] = useState<boolean>(disabled || false);\r\n\r\n//   const handleOnChange = () => {\r\n//     const newValue = !isChecked;\r\n//     setIsChecked(newValue);\r\n//     onChange && onChange(newValue);\r\n//   };\r\n\r\n//   return (\r\n//     <Checkbox\r\n//       {...args}\r\n//       checked={isChecked}\r\n//       onChange={handleOnChange}\r\n//       disabled={isDisabled}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export const Default = Template.bind({});\r\n// Default.args = {\r\n//   label: \"Checkbox\",\r\n//   checked: false,\r\n//   disabled: false,\r\n  \r\n// };\r\n\r\n\r\n// export const Checked = Template.bind({});\r\n// Checked.args = {\r\n//   label: \"Checked Checkbox\",\r\n//   checked: undefined,\r\n// };\r\n\r\n// export const Disabled = Template.bind({});\r\n// Disabled.args = {\r\n//   label: \"Disabled Checkbox\",\r\n//   disabled: true,\r\n// };\r\n\r\n// export const CheckedDisabled = Template.bind({});\r\n// CheckedDisabled.args = {\r\n//   label: \"Checked Disabled Checkbox\",\r\n//   checked: true,\r\n//   disabled: true,\r\n// };\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Story, Meta } from \"@storybook/react\";\r\nimport Checkbox , { CheckboxProps } from \"./index\";\r\n\r\nexport default {\r\n  title: \"Atoms/Checkbox\",\r\n  component: Checkbox,\r\n  argTypes: {\r\n    label: { control: \"text\" },\r\n    checked: { control: \"boolean\" },\r\n    disabled: { control: \"boolean\" },\r\n  },\r\n} as Meta;\r\n\r\nconst Template: Story<CheckboxProps> = (args) => {\r\n  const [isChecked, setIsChecked] = useState<boolean>(args.checked || false);\r\n  const [isDisabled, setIsDisabled] = useState<boolean>(args.disabled || false);\r\n\r\n  useEffect(() => {\r\n    setIsChecked(args.checked || false);\r\n  }, [args.checked]);\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(args.disabled || false);\r\n  }, [args.disabled]);\r\n\r\n  const handleOnChange = () => {\r\n    const newValue = !isChecked;\r\n    setIsChecked(newValue);\r\n    args.onChange && args.onChange(newValue);\r\n  };\r\n\r\n  return (\r\n    <Checkbox\r\n      {...args}\r\n      checked={isChecked}\r\n      onChange={handleOnChange}\r\n      disabled={isDisabled}\r\n    />\r\n  );\r\n};\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  label: \"Checkbox\",\r\n  checked: false,\r\n  disabled: false,\r\n};\r\n\r\nexport const Checked = Template.bind({});\r\nChecked.args = {\r\n  label: \"Checked Checkbox\",\r\n  checked: true,\r\n};\r\n\r\nexport const Disabled = Template.bind({});\r\nDisabled.args = {\r\n  label: \"Disabled Checkbox\",\r\n  disabled: true,\r\n};\r\n\r\nexport const CheckedDisabled = Template.bind({});\r\nCheckedDisabled.args = {\r\n  label: \"Checked Disabled Checkbox\",\r\n  checked: true,\r\n  disabled: true,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}